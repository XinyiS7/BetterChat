//fetch 异步处理表单实现无刷新交互document.querySelector("form").addEventListener("submit", function (event) {    event.preventDefault();  // 阻止表单默认提交刷新    const inputElem = document.querySelector("#chat-input");    const chatWindow = document.querySelector("#chat-window");    const userInput = inputElem.value.trim();    if (!userInput) return;    // 1. // 添加用户输入到 chat window（右边）        const userBubble = document.createElement("div");        userBubble.className = "chat-bubble user-bubble";        userBubble.innerHTML = marked.parse(usr_input);        chatWindow.appendChild(userBubble);        // 清空输入框        inputBox.value = "";    // 2. 收集复选框选项    const mod = document.querySelector('input[name="mode"]').checked        ? "on" : "";    const abstr = document.querySelector('input[name="abstract"]')        .checked ? "on" : "";    const perm = document.querySelector('input[name="keep"]').checked ?        "on" : "";    // 3. 异步发送给后端    fetch("/chat/", {        method: "POST",        headers: {            "Content-Type": "application/x-www-form-urlencoded",            "X-CSRFToken": getCookie("csrftoken"),  // 确保模板里有 {% csrf_token %}        },        body: new URLSearchParams({            usrinput: userInput,            mode: mod,            abstract: abstr,            keep: perm        }),    })    .then(response => response.json())    .then(data => {        // 4. 显示 AI 回复        const reply = data.reply || "（AI未返回回复）";        chatWindow.innerHTML += `<div class="ai-msg"><strong>AI：</strong> ${reply}</div>`;        // 5. 滚动到底部        const aiBubble = document.createElement("div");        aiBubble.className = "chat-bubble ai-bubble";        aiBubble.innerHTML = marked.parse(ai_reply);        chatWindow.appendChild(aiBubble);        // 自动滚动到底部        chatWindow.scrollTop = chatWindow.scrollHeight;    })    .catch(error => {        const errBubble = document.createElement("div");        errBubble.className = "chat-bubble error-bubble";        errBubble.innerText = "⚠️ 出错: " + error.message;        chatWindow.appendChild(errBubble);    });});